.TH spinach 1 "2011-04-11" "Spinach 0.3" "Spinach"
.SH NAME
spinach \- A small AUR helper written in Bash.
.SH SYNOPSIS
.B spinach
[options] [operation] [package]
.SH DESCRIPTION
.B spinach
is a very tiny AUR helper written in Bash that will help you download, install, and update packages from the AUR.
.SH OPTIONS
.IP "-ssl"
Use SSL when downloading packages and information from the AUR. If this option is specified, spinach will not use multiple threads when finding updates (-u, -o, -do) since testing revealed this would not help the speed at all. This option has no effect on the pacman operations enabled with the '-rep' option.
.IP "-col"
Use color in certian places.
.IP "-rep"
Also use pacman for \fIsearch\fR, \fIprint\fR, and \fIinstall\fR operations. Searching will return results from both the AUR and official repositories. Printing information will return information from pacman if available and the AUR if not. Installing will install via the official repositories if found and attempt to install from the AUR otherwise.
.SH COMMON OPERATIONS
.IP "-s"
Search for the specified package. A very similar option is '-sq' which prints only the package name from the search. This allows you to pipe the results to grep to do regex searching. See the EXAMPLES section.
.IP "-p"
Print information for the specified package.
.IP "-i"
Install the specified package.
.IP "-u"
Update packages found on the AUR. This will not update packages in the official repos or packages that have been deleted from the AUR.
.SH DO-IT-YOURSELF OPERATIONS
.IP "-d"
Download the specified package from the AUR and extract the tarball in the current directory.
.IP "-dd"
Download the specified package from the AUR and any AUR dependencies to the current directory.
.IP "-o"
List packages that have a different version than the one in the AUR.
.IP "-do"
Download all the AUR packages that have a different version than the one in the AUR to the current directory.
.SH VARIABLES 
.IP "$EDITOR"
Specify the text editor to use in order to view the PKGBUILD and .install files when installing and upgrading packages. Defaults in this order if not specified: vim emacs vi nano most less more cat
.IP "$SPINTMPDIR"
If specified the spinach build and cache directories will be stored in spinach/ in this folder. If not specified, it will default to $TMPDIR if specified and as a last resort /tmp.
.IP "$MAXTHREADS"
If specified this will be the max number of curl instances started to find out-of-date packages. If not specified, it defaults to 10. Note: the number of threads will actually be one more than this number assuming that there are at least that many packages to check.
.SH NOTES
.IP "View Files"
When you install packages using Spinach, you will be forced to view the PKGBUILD and .install files. This is not supposed to be "annoying." It is for your safety. Read them. They could easily delete your files if you don't.
.IP "Running as Root"
Never run Spinach as root. It will run makepkg as root which will run the PKGBUILD as root. You don't want that.
.IP "No Internet"
If there is no Internet connection, Spinach probably won't print anything for most operations.
.IP "Version Control"
If you have some version-control package (-svn, -git, -hg, etc.) and you want to keep the trunk while updating, upgrade the package manually instead of using the automatic upgrade operation (-u). After installing an application (or upgrading) spinach will remove the files from the spinach/build/ directory.
.IP "Spinach Cache"
When you install or upgrade an application, the build directory in your temporary directory is deleted, but the generated package (if it was successfully created) will be copied to $SPINTMPDIR/spinach/cache/<bunch of text>.pkg.tar.xz (see VARIABLES for more information on the $SPINTMPDIR variable).
.SH EXAMPLES
spinach -u
.TP
spinach -ssl -p package1 -dd package2 -do
.TP
source /usr/bin/spinach -col; aur_info spinach
.TP
spinach $(/usr/bin/spinach -sq openlp | sed 's/^/ -dd /g')
Download all AUR packages returned from a search.
.TP
spinach -sq kernel | grep -E "26-(lts|pf)"
Regular expression searching
.SH AUTHOR
Garrett (http://floft.net/contact)
